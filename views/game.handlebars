<style>
/* Yes, I know that inline css smells */

body {
  overflow: hidden;
}

#wordlist {
  position:fixed;
  width:25%;
  height:90%;
  right: 3%;
  top:5%;
  overflow-y:scroll;

  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-weight: 300;
  font-size: 20px;
}

#wordlist table {
  width: 100%;
}

</style>

<canvas id='graph'></canvas>
<div id='wordlist'></div>
<script>
// TODO: refactor this ugly inline script
$(function() {
  var w = $(window).innerWidth() * 0.72;
  var h = $(window).innerHeight();
  $('#graph')[0].width = w;
  $('#graph')[0].height = h;

  var ids = {{ids}}
  function loadWords(cb) {
    $.get("/rpc/games/" + ids + "/wordcloud", function(words) {
      words.sort(function(a, b) { return (b.frequency - a.frequency) });

      var wordCounts = words.map(function(elem) {
        return [elem.text, Math.min(elem.frequency, 10)];
      });

      cb(words, wordCounts);
    });
  }

  function renderWordCloud(wordCounts) {
    WordCloud(document.getElementById('graph'), {
      list: wordCounts,
      weightFactor: 20,
      minRotation: -0.3,
      maxRotation: 0.3,
      rotateRatio: 0.3,
      fontFamily: '"HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif'
        // shape: 'square'
    });
  }

  function renderWordTable(words) {
    var word_list = '<table>'
      for (var i = 0; i < words.length; i++) {
        word_list += '<tr><td>'+words[i].text+'</td><td>'+words[i].frequency+'</td></tr>';
      }
    word_list += '</table>';

    $('#wordlist').html(word_list);
  }

  // Determine if the counts have changed by checking the total number of
  // words.
  var prevWords = 0;
  function didCountsChange(words) {
    var total = 0;
    for (var i = 0; i < words.length; i++) {
      total += words[i].frequency;
    }
    var didChange = (total != prevWords);
    prevWords = total;
    return didChange;
  }

  function refresh() {
    loadWords(function(words, wordCounts) {
      if (didCountsChange(words)) {
        renderWordTable(words);
        renderWordCloud(wordCounts);
      }
    });
  }

  refresh();
  setInterval(refresh, 10000);
});
</script> 
